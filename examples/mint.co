"Example translated from this E programming language snippet: 
def makeMint(name) :any {
   def [sealer, unsealer] := makeBrandPair(name)
   def mint {
	 to makePurse(var balance :(int >= 0)) :any {
	   def decr(amount :(0..balance)) :void {
		 balance -= amount
	   }
	   def purse {
		 to getBalance() :int { return balance }
		 to sprout() :any { return mint.makePurse(0) }
		 to getDecr() :any { return sealer.seal(decr) }
		 to deposit(amount :int, src) :void {
		   unsealer.unseal(src.getDecr())(amount)
		   balance += amount
		 }
	   }
	   return purse
	 }
   }
   return mint
}
Will not work unless you define the BrandPair object."
 
Mint :=
  [make: name
    brandPair := BrandPair make: name.
    sealer := brandPair sealer.
    unsealer := brandPair unsealer.
    mint :=
      [makePurse: initialBal
        balance := Cell make: initialBal.
        decr := [decrementBy: amount balance put: balance - amount].
		purse := 
		  [getBalance balance
		  |sprout mint makePurse: 0
		  |getDecr sealer seal: decr 
		  |deposit: amount From: source
			(unsealer unseal: source getDecr) decrementBy: amount.
			balance put: balance + amount]]].